clear all;

malexflag = 0; % user flag
if malexflag
    %Meryem
    path.code = 'C:\Users\mayucel\Documents\PROJECTS\CODES\GLM-BCI'; addpath(genpath(path.code)); % code directory
    path.dir = 'C:\Users\mayucel\Google Drive\tCCA_GLM_PAPER\FB_RESTING_DATA'; % data directory
    path.save = path.code; % save directory
    
    %Meryem Laptop
    %     path.code = 'C:\Users\m\Documents\GitHub\GLM-BCI'; addpath(genpath(path.code)); % code directory
    %     path.dir = 'C:\Users\m\Documents\tCCA_GLM_PAPER\FB_RESTING_DATA'; % data directory
    %     path.save = 'C:\Users\m\Documents\tCCA_GLM_PAPER\FB_RESTING_DATA'; % save directory
else
    %Alex
    path.code = 'D:\Office\Research\Software - Scripts\Matlab\GLM-BCI'; addpath(genpath(path.code)); % code directory
    path.dir = 'C:\Users\avolu\Google Drive\tCCA_GLM_PAPER\FB_RESTING_DATA'; % data directory
    path.save = path.code; % save directory
end
%% load data
load([path.save '\FV_results.mat'])

% include tcca results in plots?
flag_plotCCA = true;

%% Get HRF features from all augmented channels to compare against  ground truth
%Sort through results and append
W_SS_Hrf=[];
W_SS_NoHrf=[];
W_CCA_Hrf=[];
W_CCA_NoHrf=[];
for sbj = 1:numel(TTM)
    % only look at the crossvalidated test results. These are stored where cell and trial index
    % coincide (== os)
    for os = 1:numel(TTM{sbj}.tstidx)
            % channel indices that have or dont have gt HRF
            idxChHrf = lstHrfAdd{sbj}(:,1);
            idxChNoHrf = arrayfun(@(x) find(lstLongAct{sbj}==x,1),squeeze(lstHrfAdd{sbj}(:,1)));
            % number of available channels for HRF added
            cc=1;
            nHrf = size(FMdc{sbj,os}(:,:,idxChHrf,:,cc));
            nNoHrf = size(FMdc{sbj,os}(:,:,idxChNoHrf,:,cc));
            % extract and append crossvalidated weights (from testing trial), new dimension is 
            % CHROMOPHORES x Concatenated weights of active CHANNELS (trials) x CONDITION HRF,
            W_SS_Hrf = cat(2, W_SS_Hrf, squeeze(FWss{sbj,os}(1,:,idxChHrf,os,:)));
            W_SS_NoHrf = cat(2, W_SS_NoHrf, squeeze(FWss{sbj,os}(1,:,idxChNoHrf,os,:)));
            W_CCA_Hrf = cat(2, W_CCA_Hrf, squeeze(FWcca{sbj,os}(1,:,idxChHrf,os,:)));
            W_CCA_NoHrf = cat(2, W_CCA_NoHrf, squeeze(FWcca{sbj,os}(1,:,idxChNoHrf,os,:)));

    end
end

%% (Scatter)Plot results (weights)
% plots the weights 
figure
% hrf regressor for condition
hrfreg = 1;

figure
subplot(2,2,1)
scatter(abs(W_SS_Hrf(1,:,1)),abs(W_SS_NoHrf(1,:,1)), 'or')
hold on
scatter(nanmean(abs(W_SS_Hrf(1,:,1))),nanmean(abs(W_SS_NoHrf(1,:,1))), 'xk')
%plot([min(W_SS_Hrf(1,:)) max(W_SS_Hrf(1,:))],[min(W_SS_Hrf(1,:)) max(W_SS_Hrf(1,:))],'k')
xlabel('HRF weight Condition STIM')
ylabel('HRF weight Condition REST')
title('GLM SS HbO')
axis tight
grid on

subplot(2,2,3)
scatter(W_SS_Hrf(2,:,1),W_SS_Hrf(2,:,2), 'ob')
hold on
scatter(nanmean(W_SS_Hrf(2,:,1)),nanmean(W_SS_Hrf(2,:,2)), 'xk')
plot([min(W_SS_Hrf(2,:)) max(W_SS_Hrf(2,:))],[min(W_SS_Hrf(2,:)) max(W_SS_Hrf(2,:))],'k')
xlabel('HRF weight Condition STIM')
ylabel('HRF weight Condition REST')
title('GLM SS HbR')
axis tight
grid on

subplot(2,2,2)
scatter(W_CCA_Hrf(1,:,1),W_CCA_Hrf(1,:,2), 'or')
hold on
scatter(nanmean(W_CCA_Hrf(1,:,1)),nanmean(W_CCA_Hrf(1,:,2)), 'xk')
plot([min(W_CCA_Hrf(1,:)) max(W_CCA_Hrf(1,:))],[min(W_CCA_Hrf(1,:)) max(W_CCA_Hrf(1,:))],'k')
xlabel('HRF weight Condition STIM')
ylabel('HRF weight Condition REST')
title('GLM CCA HbO')
axis tight
grid on

subplot(2,2,4)
scatter(W_CCA_Hrf(2,:,1),W_CCA_Hrf(2,:,2), 'ob')
hold on
scatter(nanmean(W_CCA_Hrf(2,:,1)),nanmean(W_CCA_Hrf(2,:,2)), 'xk')
plot([min(W_CCA_Hrf(2,:)) max(W_CCA_Hrf(2,:))],[min(W_CCA_Hrf(2,:)) max(W_CCA_Hrf(2,:))],'k')
xlabel('HRF weight Condition STIM')
ylabel('HRF weight Condition REST')
title('GLM CCA HbR')
axis tight
grid on